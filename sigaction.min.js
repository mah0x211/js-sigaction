(function(){function h(a){return"function"===typeof a}function k(a){(a instanceof HTMLElement||a instanceof SVGElement)&&a._signal_ctx&&(a._signal_ctx.j.forEach(function(b){a.removeEventListener(b,n)}),a._signal_ctx=null)}function n(a){var b=a.target._signal_ctx;b&&l.apply(l,[b.name,a].concat(b.h))}function m(a){if((a instanceof HTMLElement||a instanceof SVGElement)&&a.dataset.sigaction){a._signal_ctx&&k(a);var b=a.dataset.sigaction.split("|"),d=b[0].trim(),c=(b[1]||"").split(",").map(function(e){return e.trim()}),
f=(b[2]||"").split(",").map(function(e){return e.trim()});if(2>b.length||3<b.length)throw new SyntaxError("data-signal format must be signame|event,...|arg,...");c.forEach(function(e){a.addEventListener(e,n)});a._signal_ctx={name:d,j:c,h:f}}}function q(a){a.forEach(function(b){switch(b.type){case "attributes":b=b.target;b.dataset.sigaction?m(b):k(b);break;case "childList":Array.prototype.slice.call(b.addedNodes).forEach(m),Array.prototype.slice.call(b.removedNodes).forEach(k)}})}function p(){window.removeEventListener("load",
p);(new MutationObserver(q)).observe(document.body,{childList:!0,subtree:!0,attributes:!0});Array.prototype.slice.call(document.querySelectorAll("*[data-sigaction]")).forEach(m);h(window.SigactionLoaded)&&window.SigactionLoaded()}function l(a,b){if("string"!==typeof a)throw new TypeError("signame must be string");var d=g[a];if(d){var c=Array.prototype.slice.call(arguments),f=0;c.shift();d.forEach(function(e){try{e.g.apply(e.i,c),f++}catch(r){console.error(r)}});return f}return 0}var g={};window.addEventListener("DOMContentLoaded",
p);window.sigaction={add:function(a,b,d){if("string"!==typeof a)throw new TypeError("signame must be string");if(!h(b))throw new TypeError("act must be function");var c=g[a];if(c){a=0;for(var f=c.length;a<f;a++)if(c[a].g===b)return!1}else c=[],g[a]=c;c.push({g:b,i:d||b});return!0},remove:function(a,b){if("string"!==typeof a)throw new TypeError("signame must be string");if(!h(b))throw new TypeError("act must be function");if(a=g[a])for(var d=0,c=a.length;d<c;d++)if(a[d].g===b)return a.splice(d,1),
!0;return!1},raise:l}})();
